# Frontend receives the data
frontend application
  bind *:443
  # Option 1: Use Proxy Protocol to determine the "element size"
  # The "element size" is sent by the application via Proxy Protocol (https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt)
  # Specific header is configurable, in this example we are using 0xEA, expecting 1 byte and treating the data as an integer:w
  mode tcp
  tcp-request content set-var(txn.element_size) fc_pp_tlv(0xEA),bytes(1)


  # Option 2: Data is in HTTP request and the payload is JSON, fetch the JSON element
  mode http # Mutually exclusive with mode tcp above
  http-request set-var(txn.element_size) req.body,json_query('$.element_size','int')

  # Option 3: Data is in a HTTP header
  mode http # Mutually exclusive with mode tcp above
  http-request set-var(txn.element_size) req.hdr(X-Element-Size)


  # Determine small/medium/large
  acl small var(txn.element_size) -m int le 10
  acl medium var(txn.element_size) -m int le 50
  acl large var(txn.element_size) -m int gt 50

  # Route the traffic to the right backend
  use_backend small if small !medium
  use_backend medium if medium
  use_backend large if large

# In this example, small can handle "element size" of less than 10
backend small
  server 1.1.1.1:443 check ssl verify none
  server 1.1.1.2:443 check ssl verify none
 
# In this example, medium can handle less than 50
backend medium 
  server 2.1.1.1:443 check ssl verify none
  server 2.1.1.2:443 check ssl verify none

# In this example, large can handle more than 50
backend large
  server 3.1.1.1:443 check ssl verify none
  server 3.1.1.2:443 check ssl verify none
